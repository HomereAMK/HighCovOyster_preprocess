remove(list = ls())
library(tidyverse)
library(plotrix)
library("ggpubr")
#########Relatedness#########
my_data <- read.csv("/Users/homere/Desktop/μsat_DSC/Relatedness/01_data/Relatedness_compiled_estimates_1nov21.csv")
my_data<-my_data[,-c(1,11,12)]
str(my_data)
unique(my_data$Pop)
#########Relatedness_16nov21#########
my_data
#remove rows where value in column Pop is equal to "Large_sp2"         "Large_sp2_extra50"
new_df <- subset(my_data, !(Pop %in% c("Large_sp2", "Large_sp2_extra50")))
unique(new_df$Pop)
#recode
new_df <- new_df %>%                               # Replacing values
mutate(Pop = replace(Pop, Pop == "Large_sp2_total", "Large sp2"))%>%
mutate(Pop = replace(Pop, Pop == "Large_sp1", "Large sp1"))%>%
mutate(Pop = replace(Pop, Pop == "Small_B1", "Small 1"))%>%
mutate(Pop = replace(Pop, Pop == "Small_B2", "Small 2"))%>%
mutate(Pop = replace(Pop, Pop == "Logstor", "Løgstør"))%>%
mutate(Pop = replace(Pop, Pop == "Small_B3", "Small 3"))%>%
mutate(Pop = replace(Pop, Pop == "Burst", "Natural settlement"))
new_df
unique(new_df$Pop)
pointdata <- data.frame(
Pop = c("Large sp1", "Large sp2", "Small 1","Small 2","Small 3"),
LynchRd = c(0.276, 0.325, 0.372, 0.460, 0.294 ) )
plot1_2 <- ggline(new_df, x = "Pop", y = "LynchRd", group = 10, color = "slateblue4",
linetype = "solid", plot_type = c("b", "l", "p"), size = 0.5,
shape = 19, select = NULL, order=c("Nissum","Løgstør","Natural settlement","Large sp1",
"Large sp2","Small 1","Small 2","Small 3"),
add=c("mean", "boxplot","jitter"),
add.params= list(color = "gray", size=0.4, alpha=0.5), error.plot = "errorbar",
ylab = "Relatedness (Lynch & Ritland)", xlab = "Groups")+
geom_point(data = pointdata, aes(Pop, LynchRd), shape=17, size= 3,color="#fb8072")+
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3))
last_plot()
ggsave( "~/Desktop/μsat_DSC/Relatedness/02_results/Relatedness_LynchRd_boxplot_16april.pdf", width = 12, height = 9, dpi=600)
ggsave( "~/Desktop/μsat_DSC/Relatedness/02_results/Relatedness_LynchRd_boxplot_9jun22.tiff", width = 12, height = 9, dpi=600)
dev.off()
last_plot()
ggsave( "~/Desktop/μsat_DSC/Relatedness/02_results/Relatedness_LynchRd_boxplot_16april.pdf", width = 12, height = 9, dpi=600)
ggsave( "~/Desktop/μsat_DSC/Relatedness/02_results/Relatedness_LynchRd_boxplot_9jun22.tiff", width = 12, height = 9, dpi=300)
plot1_2 <- ggline(new_df, x = "Pop", y = "LynchRd", group = 10, color = "slateblue4",
linetype = "solid", plot_type = c("b", "l", "p"), size = 0.5,
shape = 19, select = NULL, order=c("Nissum","Løgstør","Natural settlement","Large sp1",
"Large sp2","Small 1","Small 2","Small 3"),
add=c("mean", "boxplot","jitter"),
add.params= list(color = "gray", size=0.4, alpha=0.5), error.plot = "errorbar",
ylab = "Relatedness (Lynch & Ritland)", xlab = "Groups")+
geom_point(data = pointdata, aes(Pop, LynchRd), shape=17, size= 3,color="gray")+
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3))
last_plot()
plot1_2 <- ggline(new_df, x = "Pop", y = "LynchRd", group = 10, color = "slateblue4",
linetype = "solid", plot_type = c("b", "l", "p"), size = 0.5,
shape = 19, select = NULL, order=c("Nissum","Løgstør","Natural settlement","Large sp1",
"Large sp2","Small 1","Small 2","Small 3"),
add=c("mean", "boxplot","jitter"),
add.params= list(color = "#BFBFBF", size=0.4, alpha=0.5), error.plot = "errorbar",
ylab = "Relatedness (Lynch & Ritland)", xlab = "Groups")+
geom_point(data = pointdata, aes(Pop, LynchRd), shape=17, size= 3,color="#fb8072")+
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3))
last_plot()
ggsave( "~/Desktop/μsat_DSC/Relatedness/02_results/Relatedness_LynchRd_boxplot_9jun22.pdf", width = 12, height = 9, dpi=600)
ggsave( "~/Desktop/μsat_DSC/Relatedness/02_results/Relatedness_LynchRd_boxplot_9jun22.tiff")
last_plot()
ggsave( "~/Desktop/μsat_DSC/Relatedness/02_results/Relatedness_LynchRd_boxplot_9jun22.eps", dpi=300 )
dev.off()
plot1_2 <- ggline(new_df, x = "Pop", y = "LynchRd", group = 10, color = "slateblue4",
linetype = "solid", plot_type = c("b", "l", "p"), size = 0.5,
shape = 19, select = NULL, order=c("Nissum","Løgstør","Natural settlement","Large sp1",
"Large sp2","Small 1","Small 2","Small 3"),
add=c("mean", "boxplot","jitter"),
add.params= list(color = "#BFBFBF", size=0.4, alpha=0.5), error.plot = "errorbar",
ylab = "Relatedness (Lynch & Ritland)", xlab = "Groups")+
geom_point(data = pointdata, aes(Pop, LynchRd), shape=17, size= 3,color="#fb8072")+
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3))
last_plot()
### The BEGINNING ~~~~~
##
# ~ Plots BSG_Lumpfish--PSMC | First written by Jos? Cerca with later modification by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, dplyr, reshape2, lemon, extrafont)
# Loads helper function ~
source("ploting.R")
# Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
# Defines parameters ~
FishMut = 3.7e-08
data_list <- as.data.frame(dir(pattern = "~/Desktop/Scripts/Data/PSMC/.psmc")); colnames(data_list) <- c("PSMCfile")
data_list <- as.data.frame(dir(pattern = "~/Desktop/Scripts/Data/PSMC/*.psmc")); colnames(data_list) <- c("PSMCfile")
View(data_list)
data_list <- as.data.frame(dir(pattern = ".psmc")); colnames(data_list) <- c("PSMCfile")
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, dplyr, reshape2, lemon, extrafont)
# Loads helper function ~
source("ploting.R")
# Defines parameters ~
FishMut = 3.7e-08
data_list <- as.data.frame(dir(pattern = ".psmc")); colnames(data_list) <- c("PSMCfile")
View(data_list)
data_list$GenTime <- ifelse(grepl("AtlanticHerring", data_list$PSMCfile), 3.3, 2.5)
View(data_list)
View(data_list)
# Loads PSMC data ~
fulldf <- list()
for (k in 1:nrow(data_list)){
fulldf[[k]] <- psmc.result(file = data_list$PSMCfile[k], g = data_list$GenTime[k], mu = FishMut, s = 500)
fulldf[[k]]$Sample_ID <- gsub(".psmc", "", data_list[k, 1])
fulldf[[k]]$Species <- gsub("HC-[A-z]*_[0-9]*.psmc", "", data_list[k, 1])
fulldf[[k]]$Population <- gsub("[A-z]*HC-", "", fulldf[[k]]$Sample_ID)
fulldf[[k]]$Population <- gsub("_[0-9]*", "", fulldf[[k]]$Population)}
View(fulldf)
# Loads PSMC data ~
fulldf <- list()
for (k in 1:nrow(data_list)){
fulldf[[k]] <- psmc.result(file = data_list$PSMCfile[k], g = data_list$GenTime[k], mu = FishMut, s = 500)
fulldf[[k]]$Sample_ID <- gsub(".psmc", "", data_list[k, 1])
fulldf[[k]]$Population <- gsub("[A-z]*HC-", "", fulldf[[k]]$Sample_ID)
fulldf[[k]]$Population <- gsub("_[0-9]*", "", fulldf[[k]]$Population)}
View(data_list)
View(fulldf)
# Melts PSMC data ~
fulldfUp <- melt(fulldf, id = c("Sample_ID", "Population", "YearsAgo", "Ne"))
# Limits YearsAgo to 12K - 100K ~
fulldfUpUp <- fulldfUp %>% filter(YearsAgo >= 1500 & YearsAgo <= 1000000)
ggplot(fulldfUpUp, aes(YearsAgo, Ne, group = Sample_ID, colour = Population)) +
geom_line(linetype = 1, size = .75, alpha = .9) +
coord_trans(x = "log", y = "log") +
facet_rep_grid(Species ~. , scales = "free_y") +
scale_colour_manual(values = c("#4575b4", "#4575b4", "#8c510a", "#fee090", "#fc8d59", "#d73027", "#1b7837")) +
scale_x_continuous("Years Ago",
breaks = c(5000, 10000, 15000, 25000),
labels = c("5K", "10K", "15K", "25K"),
limits = c(1500, 25200),
expand = c(.005, .005)) +
scale_y_continuous("Effective Population Size",
#limits = limits_fun,
#breaks = breaks_fun,
#labels = labels_fun,
expand = c(.05, .05)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.spacing.y = unit(1, "cm"),
panel.grid.major = element_line(color = "#ededed", linetype = "dashed", size = .5),
panel.grid.minor = element_blank(),
legend.position = "top",
legend.background = element_blank(),
legend.key = element_blank(),
legend.margin = margin(t = 0, b = 0, r = 0, l = 0),
legend.box.margin = margin(t = 10, b = 30, r = 0, l = 0),
axis.title.x = element_text(size = 22, face = "bold", margin = margin(t = 30, r = 0, b = 10, l = 0)),
axis.title.y = element_text(size = 22, face = "bold", margin = margin(t = 0, r = 30, b = 0, l = 10)),
axis.text = element_text(color = "#000000", size = 13, face = "bold"),
axis.ticks = element_line(color = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 17, face = "bold"),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
axis.line = element_line(colour = "#000000", size = .3)) +
guides(colour = guide_legend(title = "Populations:", title.theme = element_text(size = 20, face = "bold"),
label.theme = element_text(size = 19), override.aes = list(size = 2, alpha = .9), nrow = 1))
ggplot(fulldfUpUp, aes(YearsAgo, Ne, group = Sample_ID, colour = Population)) +
geom_line(linetype = 1, size = .75, alpha = .9) +
coord_trans(x = "log", y = "log") +
facet_rep_grid(Population ~. , scales = "free_y") +
scale_colour_manual(values = c("#4575b4", "#4575b4", "#8c510a", "#fee090", "#fc8d59", "#d73027", "#1b7837")) +
scale_x_continuous("Years Ago",
breaks = c(5000, 10000, 15000, 25000),
labels = c("5K", "10K", "15K", "25K"),
limits = c(1500, 25200),
expand = c(.005, .005)) +
scale_y_continuous("Effective Population Size",
#limits = limits_fun,
#breaks = breaks_fun,
#labels = labels_fun,
expand = c(.05, .05)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.spacing.y = unit(1, "cm"),
panel.grid.major = element_line(color = "#ededed", linetype = "dashed", size = .5),
panel.grid.minor = element_blank(),
legend.position = "top",
legend.background = element_blank(),
legend.key = element_blank(),
legend.margin = margin(t = 0, b = 0, r = 0, l = 0),
legend.box.margin = margin(t = 10, b = 30, r = 0, l = 0),
axis.title.x = element_text(size = 22, face = "bold", margin = margin(t = 30, r = 0, b = 10, l = 0)),
axis.title.y = element_text(size = 22, face = "bold", margin = margin(t = 0, r = 30, b = 0, l = 10)),
axis.text = element_text(color = "#000000", size = 13, face = "bold"),
axis.ticks = element_line(color = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 17, face = "bold"),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
axis.line = element_line(colour = "#000000", size = .3)) +
guides(colour = guide_legend(title = "Populations:", title.theme = element_text(size = 20, face = "bold"),
label.theme = element_text(size = 19), override.aes = list(size = 2, alpha = .9), nrow = 1))
ggplot(fulldfUpUp, aes(YearsAgo, Ne, group = Sample_ID, colour = Population)) +
geom_line(linetype = 1, size = .75, alpha = .9) +
coord_trans(x = "log", y = "log") +
facet_rep_grid(Population ~. , scales = "free_y") +
scale_colour_manual(values = c("#4575b4", "#4575b4", "#8c510a", "#fee090", "#fc8d59", "#d73027", "#1b7837")) +
scale_x_continuous("Years Ago",
breaks = c(5000, 10000, 15000, 25000),
labels = c("5K", "10K", "15K", "25K"),
#limits = c(1500, 25200),
expand = c(.005, .005)) +
scale_y_continuous("Effective Population Size",
#limits = limits_fun,
#breaks = breaks_fun,
#labels = labels_fun,
expand = c(.05, .05)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.spacing.y = unit(1, "cm"),
panel.grid.major = element_line(color = "#ededed", linetype = "dashed", size = .5),
panel.grid.minor = element_blank(),
legend.position = "top",
legend.background = element_blank(),
legend.key = element_blank(),
legend.margin = margin(t = 0, b = 0, r = 0, l = 0),
legend.box.margin = margin(t = 10, b = 30, r = 0, l = 0),
axis.title.x = element_text(size = 22, face = "bold", margin = margin(t = 30, r = 0, b = 10, l = 0)),
axis.title.y = element_text(size = 22, face = "bold", margin = margin(t = 0, r = 30, b = 0, l = 10)),
axis.text = element_text(color = "#000000", size = 13, face = "bold"),
axis.ticks = element_line(color = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 17, face = "bold"),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
axis.line = element_line(colour = "#000000", size = .3)) +
guides(colour = guide_legend(title = "Populations:", title.theme = element_text(size = 20, face = "bold"),
label.theme = element_text(size = 19), override.aes = list(size = 2, alpha = .9), nrow = 1))
